Pro filt_tracks, sed_file, filt_dir, filt_file, filts, $zmin=zmin, zmax=zmax, zbin=zbin,$ab=ab, vega=vega, out_file= out_file, mags=mags, silent=silentIf n_params() lt 4 then message,'Calling sequence: ....'If not keyword_set(zmin) then zmin=0If not keyword_set(zmax) then zmax=5If not keyword_set(zbin) then zbin=0.01If not keyword_set(ab) then vega=1If keyword_set(vega) then ab=0;----------------------------------------------------------------------; z array;----------------------------------------------------------------------nz=fix((zmax-zmin)/zbin)+1z=findgen(nz)*zbin+zmin;----------------------------------------------------------------------; reading in filter;----------------------------------------------------------------------   names = strarr(n_elements(filts));   FOR j=0, n_elements(filts)-1 DO BEGIN ;      FILT_read, file_file, filts[j], npoint, name, $;       filt_lam, filt_trans, /silent;      ;      names[j] = strcompress(name);	print, 'Filter:', j, names[j], format='(a10,i5,a12)';;   ENDFORNfilts= n_elements(filts);----------------------------------------------------------------------; SED;----------------------------------------------------------------------   readcol, sed_file, sed_lam, sed_flam, /silent   mags = fltarr(nfilts, n_elements(z))   FOR j=0, nfilts-1 DO BEGIN       FILT_read, filt_file, dir=filt_dir, filts[j], npoint, name, $      filt_lam, filt_trans, /silent	names[j]=name	if not keyword_set(silent) then print, 'Filter:', j, names[j], format='(a10,i5,a20)'	filt_vega_conv_ab, filt_lam, filt_trans, convab, zero, $          vega_lam=vega_lam, vega_flam=vega_flam, surf=surf	for iz=0,nz-1 do begin	  z1=z[iz]+1; we are interested in the observed emission from a ; galaxy of constant rest-frame properties -; the observed emission comes from wavelengths shorter by ; (1+z)      filt_vega_mag, sed_lam/z1, sed_flam, filt_lam, filt_trans,  mag, $                   vega_lam=vega_lam, vega_flam=vega_flam      IF keyword_set(ab) THEN BEGIN 		mag = mag+convab      endif      mags[j,iz] = mag	endfor; normalisation (arbitrary for time-being)	if j eq 0 then mags0= mags[0,*] mags[j,*] = mags[j,*]-mags0+20.   ENDFOR	Snfilts=strcompress(nfilts)	If not keyword_set(out_file) then begin		If not keyword_set(silent) then begin		Print,'# SED template tracks'     	Print,'# SED: ',sed_file			print,'# Filters:',names, format='(a10,'+snfilts+'a20)'		print,'# Normalisation: Arbitrary'		print,'# Table: z, mag[filts]' 		for iz = 0, nz -1 do print,z[iz],mags[*,iz],$			format='(f9.3,'+snfilts+'f12.2)'		endif	endif else begin		get_lun,unit		openw,unit,out_file	Printf,unit,'# SED template tracks'     	Printf,unit,'# SED: ',sed_file		printf,unit,'# Filters:',names, format='(a10,'+snfilts+'a20)'		printf,unit,'# Normalisation: Arbitrary'		printf,unit,'# Table: z, mag[filts]' 		for iz = 0, nz -1 do printf,unit,z[iz],mags[*,iz],$			format='(f9.3,'+snfilts+'f12.2)'		free_lun,unit	endelseEND